Tool to quickly deploy openstack dev environments.

# Goals

* To quickly build dev openstack environments in clean natty environments
* To describe working configurations of openstack (which code branches work together?  what do config files look like for those branches?)
* To make it easier for developers to dive into openstack so that they can productively contribute without having to understand every part of the system at once
* To make it easy to prototype cross-project features

Be sure to carefully read these scripts before you run them as they install software and may alter your networking configuration.

# To start a dev cloud on your local machine (installing on a dedicated vm is safer!):

    ./stack.sh

If working correctly, you should be able to access openstack endpoints, like:

* Dashboard: http://myhost/
* Keystone: http://myhost:5000/v2.0/

# To start a dev cloud in an lxc container:

    ./build_lxc.sh

You will need to configure a bridge and network on your host machine (by default br0) before starting build_lxc.sh.  A sample host-only network configuration can be found in lxc_network_hostonlyplusnat.sh.

# Customizing

You can tweak environment variables by creating file name 'localrc' should you need to override defaults.  It is likely that you will need to do this to tweak your networking configuration should you need to access your cloud from a different host.

# Todo

* Add python-novaclient cli support
* syslog
* allow rabbit connection to be specified via environment variables with sensible defaults
* Add volume support
* Add quantum support

# Future

* idea: move from screen to tmux?
* idea: create a live-cd / vmware preview image using this?
<<<<<<< HEAD
* idea: use lxc to make the proto-image have everything?  so launching a new server is just turn on / updating / run?
=======
OpenStack Dashboard
-------------------

The OpenStack Dashboard is a Django based reference implementation of a web
based management interface for OpenStack.

It is based on django-openstack, which is designed to be a generic Django
module that can be re-used in other sites.

For more information about how to get started with the OpenStack Dashboard,
view the README file in the openstack-dashboard folder.

For more information about working directly with django-openstack, see the
README file in the django-openstack folder.

For release management:

 * https://launchpad.net/openstack-dashboard

For blueprints and feature specifications:

 * https://blueprints.launchpad.net/openstack-dashboard

For issue tracking:

 * https://bugs.launchpad.net/openstack-dashboard

Project Structure and Testing:
------------------------------

This project is a bit different from other Openstack projects in that it has
two very distinct components underneath it: django-openstack, and
openstack-dashboard.

django-openstack holds the generic libraries and components that can be
used in any Django project. In testing, this component is set up with
buildout (see run_tests.sh), and any dependencies that get added need to
be added to the django-openstack/buildout.cfg file.

openstack-dashboard is a reference django project that uses django-openstack
and is built with a virtualenv and tested through that environment. If
depdendencies are added that the reference django project needs, they
should be added to openstack-dashboard/tools/pip-requires.

The run_tests.sh script invokes tests and analysis on both of these
components in it's process, and is what Jenkins uses to verify the
stability of the project.
=======
>>>>>>> 6398787bf1828078c1f051fbdc65c9b17440be7a
